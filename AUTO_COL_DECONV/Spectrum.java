package AUTO_COL_DECONV;


/***************************************************
 * 
 * License
 * 
 * PlugIn:		CDReview
 * 
 * File: 		Spectrum.java
 * 
 * Description:	CDReview Spectrum - Support class
 *				
 *				This software is provided as a supplement to:
 *
 *				Haub, P. and Meckel, T. A Model based Survey of Colour Deconvolution 
 *				in Diagnostic Brightfield Microscopy: Error Estimation and Spectral Consideration.
 *				Sci. Rep. 5, 12096; doi: 10.1038/srep12096 (2015).
 *
 *
 * @author: 	Peter Haub, 2015
 * 				 
 * Copyright(C) 2015 Peter Haub
 *              phaub@dipsystems.de
 *              www.dipsystems.de
 *              
 * Version:     0.1.0 - July 2015
 * 
 * License:		This program is free software; you can redistribute it and/or modify it
 * 				under the terms of the GNU General Public License as published by the
 * 				Free Software Foundation; either version 2 of the License, or (at your
 * 				option) any later version.
 *
 * 				This program is distributed in the hope that it will be useful, but
 * 				WITHOUT ANY WARRANTY; without even the implied warranty of
 * 				MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * 				General Public License for more details.
 *
 * 				You should have received a copy of the GNU General Public License along
 * 				with this program; if not, write to the Free Software Foundation, Inc.,
 * 				51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
 * 
 * 
 ***************************************************/


/*

// Spectra

static double [] wavel = {405,410,415,420,425,430,435,440,445,450,455,460,465,470,475,480,485,490,495,500,505,510,515,520,525,530,535,540,545,550,555,560,565,570,575,580,585,590,595,600,605,610,615,620,625,630,635,640,645,650,655,660,665,670,675,680,685,690,695,700};
static double [] sonyB = {0.26,0.304,0.344,0.384,0.422,0.462,0.502,0.546,0.6,0.646,0.674,0.7,0.716,0.722,0.726,0.728,0.71,0.676,0.628,0.574,0.508,0.44,0.372,0.306,0.238,0.176,0.134,0.1,0.07,0.05,0.036,0.028,0.022,0.018,0.014,0.012,0.012,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.01,0.012,0.012,0.012,0.012,0.012,0.01,0,0,0,0,0,0,0,0,0};
static double [] sonyG = {0.039,0.04,0.042,0.048,0.056,0.064,0.074,0.086,0.102,0.12,0.148,0.176,0.21,0.248,0.288,0.324,0.364,0.408,0.474,0.538,0.604,0.676,0.744,0.808,0.858,0.9,0.928,0.938,0.932,0.912,0.882,0.844,0.794,0.728,0.674,0.62,0.548,0.472,0.398,0.326,0.262,0.2,0.148,0.11,0.086,0.068,0.056,0.05,0.048,0.046,0.044,0.046,0.05,0.06,0.072,0.084,0.1,0.118,0.136,0.152};
static double [] sonyR = {0.036,0.034,0.03,0.026,0.024,0.022,0.02,0.02,0.022,0.022,0.022,0.022,0.022,0.024,0.024,0.024,0.026,0.03,0.032,0.036,0.042,0.048,0.056,0.062,0.068,0.074,0.074,0.07,0.068,0.066,0.078,0.112,0.184,0.266,0.41,0.554,0.694,0.818,0.888,0.952,0.976,0.992,0.998,0.998,0.998,0.994,0.982,0.964,0.95,0.942,0.928,0.912,0.896,0.882,0.868,0.856,0.842,0.83,0.822,0.82};
static double [] sonyBW = {0.50625,0.56375,0.61125,0.65375,0.68875,0.72,0.74875,0.7725,0.7925,0.8125,0.83375,0.85375,0.8725,0.89,0.9075,0.925,0.94125,0.955,0.9675,0.97875,0.98875,0.99375,0.9925,0.99125,0.98875,0.98875,0.9925,0.995,0.99375,0.9925,0.99,0.98625,0.9825,0.97875,0.97375,0.97,0.965,0.96,0.955,0.9475,0.9425,0.9375,0.93375,0.93,0.92625,0.91875,0.9075,0.89375,0.87875,0.86875,0.86,0.85,0.83375,0.8125,0.79,0.76875,0.74875,0.73,0.71125,0.69625};
static double [] d65 = {0.871204,0.91486,0.924589,0.934318,0.90057,0.866823,0.957736,1.04865,1.10936,1.17008,1.1741,1.17812,1.16336,1.14861,1.15392,1.15923,1.12367,1.08811,1.09082,1.09354,1.08578,1.07802,1.06296,1.0479,1.06239,1.07689,1.06047,1.04405,1.04225,1.04046,1.02023,1,0.981671,0.963342,0.960611,0.95788,0.922368,0.886856,0.893459,0.900062,0.898026,0.895991,0.886489,0.876987,0.854936,0.832886,0.834939,0.836992,0.81863,0.800268,0.801207,0.802146,0.812462,0.822778,0.80281,0.782842,0.740027,0.697213,0.706652,0.716091};
static double [] ledB = {0.0011096,0.003613474,0.004854474,0.006241474,0.008358474,0.011096474,0.018395263,0.033031053,0.062778421,0.120626842,0.226473684,0.409110526,0.677852632,0.923136842,0.985615789,0.857278947,0.656852632,0.475078947,0.334842105,0.227431579,0.1503,0.099497895,0.066136316,0.043798421,0.0292,0.019854211,0.014088421,0.010002684,0.007665,0.006059,0.003723,0.002774,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
static double [] ledG = {0,0.001606,0.003577,0.004161,0.004453,0.005548,0.005548,0.005548,0.006278,0.007081,0.008395,0.010221474,0.013504737,0.018832105,0.028542632,0.045623684,0.076355263,0.128698421,0.215742105,0.349363158,0.532121053,0.739289474,0.910757895,0.9912,0.970184211,0.873268421,0.741989474,0.606173684,0.481163158,0.373994737,0.286626316,0.216984211,0.162968421,0.121036842,0.089490526,0.065917895,0.048543684,0.035804737,0.026572632,0.019927895,0.014964737,0.011242947,0.008541,0.006643,0.005037,0.000584,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
static double [] ledR = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.001606,0.002774,0.003796,0.004161,0.004526,0.006497,0.010074947,0.016059474,0.026498421,0.044455263,0.077125263,0.138042105,0.249573684,0.432668421,0.718189474,0.967578947,0.681442105,0.295068421,0.119354211,0.050806842,0.023943158,0.012483474,0.007154,0.004672,0.004161,0.00365,0.002774,0.002774,0.002560615};
static double [] defStain = {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1};
static double [] noStain = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
static double [] dab = {0.632023215,0.657577319,0.698970004,0.766569378,0.808533879,0.840643699,0.852336449,0.862973823,0.873611197,0.887808767,0.91302851,0.919569254,0.926109999,0.936657335,0.935450009,0.934242683,0.922552467,0.915203122,0.907853777,0.902326519,0.896799261,0.890011001,0.883222742,0.862844921,0.84583342,0.828821919,0.811419786,0.794017654,0.780666183,0.767314713,0.755721384,0.744128055,0.735453708,0.726779361,0.718105015,0.696946855,0.675788694,0.655252671,0.634716647,0.614180624,0.596388083,0.578595543,0.560803002,0.534990235,0.509177468,0.485267828,0.461358189,0.43744855,0.415339943,0.390467761,0.365595578,0.349014123,0.329647036,0.310279949,0.290912861,0.281169996,0.27142713,0.261684264,0.253865068,0.246045872};
static double [] hema = {0.176091259,0.142667504,0.150785394,0.170261715,0.174626521,0.183998009,0.193483668,0.197498503,0.201513339,0.200071143,0.199818066,0.199902908,0.199987749,0.207724107,0.21287603,0.218027952,0.234330456,0.243071214,0.251811973,0.26113089,0.270449807,0.281168212,0.291886616,0.31651845,0.328969738,0.341421025,0.352599288,0.36377755,0.371878923,0.379980295,0.386055378,0.392130461,0.396584689,0.401038918,0.405493147,0.412732212,0.419971278,0.420941117,0.421910956,0.422880795,0.417583243,0.41228569,0.406988138,0.389299604,0.37161107,0.349984705,0.32835834,0.306731974,0.281351889,0.252799293,0.224246697,0.205211633,0.178291617,0.151371602,0.124451586,0.109861525,0.095271463,0.080681401,0.069146444,0.057611487};
static double [] fastR = {0.210853365,0.338818557,0.325163675,0.305032738,0.295039632,0.303358658,0.306707129,0.311597038,0.316486947,0.317613004,0.320146286,0.319675126,0.319203965,0.324165934,0.331082028,0.337998121,0.350805051,0.36361198,0.377078572,0.390545163,0.419062375,0.434445866,0.449829357,0.478088503,0.484320192,0.49055188,0.490025592,0.489499303,0.488201189,0.486903075,0.483036446,0.479169817,0.466358747,0.453547676,0.440736606,0.391104875,0.341473143,0.299462163,0.257451182,0.215440202,0.188601121,0.161762039,0.134922958,0.113534591,0.092146223,0.085915839,0.079685455,0.073455071,0.069839748,0.06577251,0.061705272,0.05899378,0.048843515,0.038693251,0.028542986,0.014416874,0.000290761,0,0,0};
static double [] eosin = {0.096910013,0.074101721,0.053981812,0.036722807,0.036465701,0.039193721,0.036826668,0.037048024,0.03726938,0.038217918,0.044449374,0.045953325,0.047457275,0.058842671,0.067884263,0.076925855,0.089334062,0.101742269,0.116203212,0.130664156,0.163984706,0.187479767,0.210974829,0.27403,0.2911933,0.308356599,0.286790882,0.265225165,0.224092346,0.182959528,0.145103756,0.107247984,0.087179342,0.067110701,0.047042059,0.027403714,0.00776537,0.003087248,0,0,0,0,0,0,0,0,0,0,0,0,0,0.00094105,0.002907175,0.0048733,0.006839425,0.005426474,0.004013524,0.002600574,0,0};
static double [] methylG = {0.115393419,0.200914843,0.241715994,0.227922897,0.2155998,0.186607378,0.167787096,0.15709418,0.146401263,0.132866105,0.119088528,0.112816042,0.106543557,0.093282955,0.090832586,0.088382218,0.085503589,0.08262496,0.0817126,0.080800239,0.076551427,0.076349378,0.076147329,0.078172431,0.081366003,0.084559575,0.086273372,0.087987168,0.088227265,0.088467361,0.087478958,0.086490555,0.086779897,0.087069238,0.08735858,0.091940039,0.096521498,0.10504797,0.113574442,0.122100914,0.128244529,0.134388144,0.140531759,0.149513951,0.158496142,0.16279614,0.167096139,0.171396138,0.168844524,0.165973959,0.163103394,0.161189684,0.146826227,0.132462769,0.118099312,0.105208666,0.092318021,0.079427375,0.064577921,0.049728468};

// Stain vectors

static double [] cvD65DAB = {0.478583309, 0.770695689, 0.873046755};
static double [] cvD65Hema = {0.285098321, 0.323702078, 0.226405723};

static double [] cvRGBDAB = {0.471965125, 0.828624056, 0.922961546};
static double [] cvRGBHema = {0.333974578, 0.331975012, 0.219953543};

static double [] cvRGBbwDAB = {0.473223168, 0.832762017, 0.919772877};
static double [] cvRGBbwHema = {0.334548619, 0.325519324, 0.224270442};

*/


import java.io.*;
import java.util.ArrayList;

public class Spectrum {
	double[] val;
	
	public int getSize(){
		return val.length;
	}
	
	
	public static Spectrum read(String path){
		if ( !(new File(path).exists()) )
			return null;
		
		String line;
		ArrayList<Double> list = new ArrayList<Double>();
		
		BufferedReader br = null;
		try {	
			br = new BufferedReader( new FileReader(path) );
			while(null != (line = br.readLine())){
				list.add(Double.parseDouble(line));
			}
		} catch (FileNotFoundException e1) {
			e1.printStackTrace();
			return null;
		} catch (IOException e2) {
			e2.printStackTrace();
			return null;
		} finally {
			if (null != br) {
			try {
				br.close();
				} catch (IOException e3) {
					e3.printStackTrace();
					return null;
				}
			}	    	
		}
		
		Spectrum sp = new Spectrum();
		sp.val = new double[list.size()];
		for (int i=0; i<sp.val.length; i++)
			sp.val[i] = list.get(i);

		return sp;
	}
}
